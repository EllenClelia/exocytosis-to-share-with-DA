// Auto-generated by ImageTank, can overwrite using the C++ template gear menu.

#include "structures.h"

//////////////////////////////////////////////////////////////////////////////
//    PeakGroup
//////////////////////////////////////////////////////////////////////////////

void PeakGroup::pinfo(void) const
{
    pinfoIndent("");
}

void PeakGroup::pinfoIndent(std::string pad) const
{
    std::cerr << pad << "height = " << height << std::endl;
    std::cerr << pad << "base = " << base << std::endl;
    std::cerr << pad << "threshold = " << threshold << std::endl;
    std::cerr << pad << "peak = "; peak.pinfo();
    std::cerr << pad << "center = "; center.pinfo();
    std::cerr << pad << "intensities = "; intensities.pinfo();
}

void PeakGroup::WriteStructure(DTDataStorage &output,std::string name)
{
    // Structure for "height"
    output.Save("height",name+"_1N");
    output.Save("Number",name+"_1T");

    // Structure for "base"
    output.Save("base",name+"_2N");
    output.Save("Number",name+"_2T");

    // Structure for "threshold"
    output.Save("threshold",name+"_3N");
    output.Save("Number",name+"_3T");

    // Structure for "peak"
    output.Save("peak",name+"_4N");
    output.Save("height",name+"_4T_1N");
    output.Save(1,name+"_4T_N");
    output.Save("Image",name+"_4T");

    // Structure for "center"
    output.Save("center",name+"_5N");
    output.Save("Point2D",name+"_5T");

    // Structure for "intensities"
    output.Save("intensities",name+"_6N");
    output.Save("t",name+"_6T_1N");
    output.Save("Number",name+"_6T_1T");
    output.Save("average",name+"_6T_2N");
    output.Save("Number",name+"_6T_2T");
    output.Save(2,name+"_6T_N");
    output.Save("Table",name+"_6T");

    output.Save(6,name+"_N");
    output.Save("PeakGroup",name+"_Name");
    output.Save("Group",name);
}

void Write(DTDataStorage &output,std::string name,const PeakGroup &var)
{
    output.Save(var.height,name+"_height");
    output.Save(var.base,name+"_base");
    output.Save(var.threshold,name+"_threshold");
    Write(output,name+"_peak",var.peak);
    Write(output,name+"_center",var.center);
    Write(output,name+"_intensities",var.intensities);
    Write(output,name,DTDoubleArray());
}

void WriteOne(DTDataStorage &output,std::string name,const PeakGroup &var)
{
    Write(output,name,var);
    output.Save("Group","Seq_"+name);
    PeakGroup::WriteStructure(output,"SeqInfo_"+name);
}

void Read(DTDataStorage &input,std::string name,PeakGroup &var)
{
    var.height = input.ReadNumber(name+"_height");
    var.base = input.ReadNumber(name+"_base");
    var.threshold = input.ReadNumber(name+"_threshold");
    Read(input,name+"_peak",var.peak);
    Read(input,name+"_center",var.center);
    Read(input,name+"_intensities",var.intensities);
}
