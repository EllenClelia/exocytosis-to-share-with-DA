// Auto-generated by ImageTank, can overwrite using the C++ template gear menu.

#include "structures.h"

//////////////////////////////////////////////////////////////////////////////
//    MyGroup
//////////////////////////////////////////////////////////////////////////////

void MyGroup::pinfo(void) const
{
    pinfoIndent("");
}

void MyGroup::pinfoIndent(std::string pad) const
{
    std::cerr << pad << "Values = "; Values.pinfo();
    std::cerr << pad << "Variation1 = " << Variation1 << std::endl;
    std::cerr << pad << "ratio = " << ratio << std::endl;
    std::cerr << pad << "arcForRatio = " << arcForRatio << std::endl;
    std::cerr << pad << "ratioAtMax = " << ratioAtMax << std::endl;
    std::cerr << pad << "arcForRatioAtMax = " << arcForRatioAtMax << std::endl;
}

void MyGroup::WriteStructure(DTDataStorage &output,std::string name)
{
    // Structure for "Values"
    output.Save("Values",name+"_1N");
    output.Save("Path2D Values",name+"_1T");

    // Structure for "Variation1"
    output.Save("Variation1",name+"_2N");
    output.Save("Number",name+"_2T");

    // Structure for "ratio"
    output.Save("ratio",name+"_3N");
    output.Save("Number",name+"_3T");

    // Structure for "arcForRatio"
    output.Save("arcForRatio",name+"_4N");
    output.Save("Number",name+"_4T");

    // Structure for "ratioAtMax"
    output.Save("ratioAtMax",name+"_5N");
    output.Save("Number",name+"_5T");

    // Structure for "arcForRatioAtMax"
    output.Save("arcForRatioAtMax",name+"_6N");
    output.Save("Number",name+"_6T");

    output.Save(6,name+"_N");
    output.Save("MyGroup",name+"_Name");
    output.Save("Group",name);
}

void Write(DTDataStorage &output,std::string name,const MyGroup &var)
{
    Write(output,name+"_Values",var.Values);
    output.Save(var.Variation1,name+"_Variation1");
    output.Save(var.ratio,name+"_ratio");
    output.Save(var.arcForRatio,name+"_arcForRatio");
    output.Save(var.ratioAtMax,name+"_ratioAtMax");
    output.Save(var.arcForRatioAtMax,name+"_arcForRatioAtMax");
    Write(output,name,DTDoubleArray());
}

void WriteOne(DTDataStorage &output,std::string name,const MyGroup &var)
{
    Write(output,name,var);
    output.Save("Group","Seq_"+name);
    MyGroup::WriteStructure(output,"SeqInfo_"+name);
}

void Read(DTDataStorage &input,std::string name,MyGroup &var)
{
    Read(input,name+"_Values",var.Values);
    var.Variation1 = input.ReadNumber(name+"_Variation1");
    var.ratio = input.ReadNumber(name+"_ratio");
    var.arcForRatio = input.ReadNumber(name+"_arcForRatio");
    var.ratioAtMax = input.ReadNumber(name+"_ratioAtMax");
    var.arcForRatioAtMax = input.ReadNumber(name+"_arcForRatioAtMax");
}
